# This is a basic workflow to help you get started with Actions

name: TestWorkFlow3D

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Step 1 - Checks-out your repository under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v2
      with:
          ref: "main"
          submodules: true  # Fetch Hugo themes
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
    - name: Preview File
      run: |
        cat content/words/python-net/_index.md
    # Step 2 - Sets up the latest version of Hugo
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
          hugo-version: 'latest'
          extended: true

    # Step 3 - Clean and don't fail
#    - name: Clean public directory
#      run: rm -rf public

    # Step 4 - Builds the site using the latest version of Hugo
    # Also specifies the theme we want to use
    - name: Install Dependicies1
      run:  npm install -D --save autoprefixer

    - name: Install Dependicies2
      run:  npm install -D --save postcss-cli

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "url:"
        replace: "url_ignore:"
        include: "_index.md" # Will match all README.md files in any nested directory

    - name: Build Home
      run: hugo --config "./config-prod.toml" -c "content/words" -b "https://products.aspose.com/words" --cleanDestinationDir --buildDrafts

    - name: Preview Build File
      run: |
        ls public -all
        cat public/python-net/index.html
        
    - name: Deploy Home to S3
      run: hugo deploy --config "./config-prod.toml" --target "words" --force 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
