# This work will only work when there is a change in theme files.
name: StageCompleteSiteBuild

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths:
      - 'themes/lutsk-aspose-theme/**'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Step 1 - Checks-out your repository under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: true  # Fetch Hugo themes
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    # Step 2 - Sets up the latest version of Hugo
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
          hugo-version: 'latest'
          extended: true

    # Step 3 - Clean and don't fail
#    - name: Clean public directory
#      run: rm -rf public

    # Step 4 - Builds the site using the latest version of Hugo
    # Also specifies the theme we want to use
    - name: Install Dependicies1
      run:  npm install -D --save autoprefixer

    - name: Install Dependicies2
      run:  npm install -D --save postcss-cli

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "url:"
        replace: "url_ignore:"
        include: "_index.md" # Will match all README.md files in any nested directory
    - name: Find and Replace domain name
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "products.aspose.com"
        replace: "products-qa.aspose.com"
        include: "_index.md" # Will match all README.md files in any nested directory

    - name: Find and Replace image url domain
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "logoImageSrc=\"https://www.aspose.cloud/"
        replace: "logoImageSrc=\"https://cms.admin.containerize.com/"
        include: "_index.md" # Will match all README.md files in any nested directory

    - name: Build 3d
      run: hugo --config "./config-i18n.toml" -c "content/3d" -b "https://products-qa.aspose.com/3d" --cleanDestinationDir --minify

    - name: Deploy 3d to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "3d" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
   
    - name: Build de
      run: hugo --config "./config.toml" -c "content/de" -b "https://products-qa.aspose.com/de" --cleanDestinationDir --minify

    - name: Deploy de to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "de" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
        
    - name: Build barcode
      run: hugo --config "./config.toml" -c "content/barcode" -b "https://products-qa.aspose.com/barcode" --cleanDestinationDir --minify

    - name: Deploy barcode to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "barcode" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build cad
      run: hugo --config "./config.toml" -c "content/cad" -b "https://products-qa.aspose.com/cad" --cleanDestinationDir --minify

    - name: Deploy cad to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "cad" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build cells
      run: hugo --config "./config-i18n.toml" -c "content/cells" -b "https://products-qa.aspose.com/cells" --cleanDestinationDir --minify

    - name: Deploy cells to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "cells" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build diagram
      run: hugo --config "./config-i18n.toml" -c "content/diagram" -b "https://products-qa.aspose.com/diagram" --cleanDestinationDir --minify

    - name: Deploy diagram to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "diagram" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build drawing
      run: hugo --config "./config.toml" -c "content/drawing" -b "https://products-qa.aspose.com/drawing" --cleanDestinationDir --minify

    - name: Deploy drawing to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "drawing" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build email
      run: hugo --config "./config.toml" -c "content/email" -b "https://products-qa.aspose.com/email" --cleanDestinationDir --minify

    - name: Deploy email to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "email" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build font
      run: hugo --config "./config.toml" -c "content/font" -b "https://products-qa.aspose.com/font" --cleanDestinationDir --minify

    - name: Deploy font to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "font" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build finance
      run: hugo --config "./config-i18n.toml" -c "content/finance" -b "https://products-qa.aspose.com/finance" --cleanDestinationDir --minify

    - name: Deploy finance to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "finance" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build gis
      run: hugo --config "./config.toml" -c "content/gis" -b "https://products-qa.aspose.com/gis" --cleanDestinationDir --minify

    - name: Deploy gis to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "gis" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build html
      run: hugo --config "./config.toml" -c "content/html" -b "https://products-qa.aspose.com/html" --cleanDestinationDir --minify

    - name: Deploy html to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "html" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build imaging
      run: hugo --config "./config.toml" -c "content/imaging" -b "https://products-qa.aspose.com/imaging" --cleanDestinationDir --minify

    - name: Deploy imaging to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "imaging" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
    
    - name: Build note
      run: hugo --config "./config.toml" -c "content/note" -b "https://products-qa.aspose.com/note" --cleanDestinationDir --minify

    - name: Deploy note to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "note" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
    
    - name: Build ocr
      run: hugo --config "./config.toml" -c "content/ocr" -b "https://products-qa.aspose.com/ocr" --cleanDestinationDir --minify

    - name: Deploy ocr to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "ocr" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
    
    - name: Build omr
      run: hugo --config "./config.toml" -c "content/omr" -b "https://products-qa.aspose.com/omr" --cleanDestinationDir --minify

    - name: Deploy omr to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "omr" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build page
      run: hugo --config "./config.toml" -c "content/page" -b "https://products-qa.aspose.com/page" --cleanDestinationDir --minify

    - name: Deploy page to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "page" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build pdf
      run: hugo --config "./config.toml" -c "content/pdf" -b "https://products-qa.aspose.com/pdf" --cleanDestinationDir --minify

    - name: Deploy pdf to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "pdf" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build psd
      run: hugo --config "./config.toml" -c "content/psd" -b "https://products-qa.aspose.com/psd" --cleanDestinationDir --minify

    - name: Deploy psd to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "psd" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build pub
      run: hugo --config "./config.toml" -c "content/pub" -b "https://products-qa.aspose.com/pub" --cleanDestinationDir --minify

    - name: Deploy pub to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "pub" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Build slides
      run: hugo --config "./config-i18n.toml" -c "content/slides" -b "https://products-qa.aspose.com/slides" --cleanDestinationDir --minify

    - name: Deploy slides to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "slides" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
            
    - name: Build svg
      run: hugo --config "./config.toml" -c "content/svg" -b "https://products-qa.aspose.com/svg" --cleanDestinationDir --minify

    - name: Deploy svg to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "svg" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
    - name: Build tasks
      run: hugo --config "./config.toml" -c "content/tasks" -b "https://products-qa.aspose.com/tasks" --cleanDestinationDir --minify

    - name: Deploy tasks to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "tasks" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
    - name: Build tex
      run: hugo --config "./config.toml" -c "content/tex" -b "https://products-qa.aspose.com/tex" --cleanDestinationDir --minify

    - name: Deploy tex to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "tex" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
    - name: Build total
      run: hugo --config "./config-i18n.toml" -c "content/total" -b "https://products-qa.aspose.com/total" --cleanDestinationDir --minify
     
    - name: Deploy total to S3
      run: hugo deploy --config "./config-i18n.toml" --maxDeletes=-1 --target "total" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
    - name: Build words
      run: hugo --config "./config.toml" -c "content/words" -b "https://products-qa.aspose.com/words" --cleanDestinationDir --minify

    - name: Deploy words to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "words" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
        
    - name: Build zip
      run: hugo --config "./config.toml" -c "content/zip" -b "https://products-qa.aspose.com/zip" --cleanDestinationDir --minify

    - name: Deploy zip to S3
      run: hugo deploy --config "./config.toml" --maxDeletes=-1 --target "zip" --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    # Invalidate Cloudfront (this action)
    - name: invalidate complete cache
      uses: chetan/invalidate-cloudfront-action@master
      env:
        DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_STAGE }}
        PATHS_FROM: /*
        AWS_REGION: 'us-west-2'
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
